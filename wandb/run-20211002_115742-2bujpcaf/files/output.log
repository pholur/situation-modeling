I1002 11:57:49.035032 140345906526016 filelock.py:274] Lock 140341944417360 acquired on /mnt/SSD2/pholur/cache/51ba668f7ff34e7cdfa9561e8361747738113878850a7d717dbc69de8683aaad.c7efaa30a0d80b2958b876969faa180e485944a849deee4ad482332de65365a7.lock





Downloading: 100%|█████████████████████████████████████████████████████████████████████████████████████████████| 501M/501M [00:12<00:00, 41.3MB/s]
I1002 11:58:01.218392 140345906526016 filelock.py:318] Lock 140341944417360 released on /mnt/SSD2/pholur/cache/51ba668f7ff34e7cdfa9561e8361747738113878850a7d717dbc69de8683aaad.c7efaa30a0d80b2958b876969faa180e485944a849deee4ad482332de65365a7.lock
Some weights of the model checkpoint at roberta-base were not used when initializing RobertaForTokenClassification: ['lm_head.bias', 'lm_head.dense.weight', 'lm_head.dense.bias', 'lm_head.layer_norm.weight', 'lm_head.layer_norm.bias', 'lm_head.decoder.weight']
- This IS expected if you are initializing RobertaForTokenClassification from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing RobertaForTokenClassification from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Some weights of RobertaForTokenClassification were not initialized from the model checkpoint at roberta-base and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Traceback (most recent call last):
  File "train.py", line 15, in <module>
    train_loader, val_loader = get_data(PATH, FLAG, AUG, REEXTRACT, FRACTION)
  File "/home/pholur/Situation_Modeling/data.py", line 208, in get_data
    train_dataset = get_data_processed(train_dataset, FLAG)
  File "/home/pholur/Situation_Modeling/data.py", line 84, in get_data_processed
    train_encodings = tokenization(ordered_posts)
  File "/home/pholur/Situation_Modeling/shared_train_and_test_functions.py", line 10, in tokenization
    train_encodings = tokenize(train_texts)
  File "/home/pholur/Situation_Modeling/shared_train_and_test_functions.py", line 8, in tokenize
    return tokenizer(text, is_split_into_words=False, return_offsets_mapping=True, padding=True, truncation=True)
  File "/home/pholur/miniconda3/envs/sit/lib/python3.7/site-packages/transformers/tokenization_utils_base.py", line 2214, in __call__
    **kwargs,
  File "/home/pholur/miniconda3/envs/sit/lib/python3.7/site-packages/transformers/tokenization_utils_base.py", line 2399, in batch_encode_plus
    **kwargs,
  File "/home/pholur/miniconda3/envs/sit/lib/python3.7/site-packages/transformers/tokenization_utils.py", line 528, in _batch_encode_plus
    "return_offset_mapping is not available when using Python tokenizers."
NotImplementedError: return_offset_mapping is not available when using Python tokenizers.To use this feature, change your tokenizer to one deriving from transformers.PreTrainedTokenizerFast.