Some weights of the model checkpoint at distilbert-base-uncased were not used when initializing DistilBertForTokenClassification: ['vocab_transform.weight', 'vocab_transform.bias', 'vocab_layer_norm.weight', 'vocab_layer_norm.bias', 'vocab_projector.weight', 'vocab_projector.bias']
- This IS expected if you are initializing DistilBertForTokenClassification from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing DistilBertForTokenClassification from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Some weights of DistilBertForTokenClassification were not initialized from the model checkpoint at distilbert-base-uncased and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Using separate samples per entity: Size =  47838
Using separate samples per entity: Size =  284
{'input_ids': tensor([  101,  2062, 21746,  2039,  2084,  3915,  1012,  2027,  2024,  3805,
         1997,  1996,  2208,  2006,  1996,  2047,  3690,  1997,  8677,  1012,
         2591,  4923,  2291,  1010, 17404, 19494,  1010, 13845,  4182, 20370,
         2011, 26996,  2945,  1010,  7305, 18100,  3508,  7958,  1010, 15657,
         1012,  1012,  1012,  2057,  2097,  2031,  2216,  2477,  1010,  2205,
         1010,  2057,  1005,  2128,  2074,  2025,  2039,  2000,  3177,  2664,
         1012,   102,     0,     0,     0,     0,     0,     0,     0,     0,
            0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
            0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
            0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
            0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
            0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
            0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
            0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
            0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
            0,     0,     0,     0,     0,     0,     0,     0,     0,     0]), 'attention_mask': tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 'offset_mapping': tensor([[  0,   0],
        [  0,   4],
        [  5,  11],
        [ 12,  14],
        [ 15,  19],
        [ 20,  23],
        [ 23,  24],
        [ 25,  29],
        [ 30,  33],
        [ 34,  39],
        [ 40,  42],
        [ 43,  46],
        [ 47,  51],
        [ 52,  54],
        [ 55,  58],
        [ 59,  62],
        [ 63,  66],
        [ 67,  69],
        [ 70,  79],
        [ 79,  80],
        [ 81,  87],
        [ 88,  94],
        [ 95, 101],
        [101, 102],
        [103, 110],
        [111, 120],
        [120, 121],
        [122, 130],
        [131, 136],
        [136, 141],
        [142, 144],
        [145, 156],
        [157, 165],
        [165, 166],
        [167, 171],
        [171, 174],
        [174, 178],
        [179, 184],
        [184, 185],
        [186, 196],
        [196, 197],
        [197, 198],
        [198, 199],
        [200, 202],
        [203, 207],
        [208, 212],
        [213, 218],
        [219, 225],
        [225, 226],
        [227, 230],
        [230, 231],
        [232, 234],
        [234, 235],
        [235, 237],
        [238, 242],
        [243, 246],
        [247, 249],
        [250, 252],
        [253, 258],
        [259, 262],
        [262, 263],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0]]), 'labels': tensor([-100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100,
        -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100,
           0,    0,    0, -100, -100, -100, -100, -100, -100, -100, -100, -100,
        -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100,
        -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100,
        -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100,
        -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100,
        -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100,
        -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100,
        -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100,
        -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100,
        -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100,
        -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100,
        -100, -100, -100, -100])} {'input_ids': tensor([  101,  2157,  2085,  2115,  2147,  2003,  2025, 10142,  2583,  2000,
         2486,  2017,  2000,  2202,  1996, 14855,  2497,  1998,  2017,  1005,
         1040,  2031,  3423,  7047,  2065,  2027,  2106, 14406, 22507,  2065,
         2017, 17912,  2240,  2039,  1998,  2202,  2009,  2138,  2017,  1005,
         2128,  4452,  2017,  1005,  2222,  4558,  2115,  3105,  1029,  2092,
         2017,  1005,  2128,  2055,  2000,  4558,  2242,  2521,  2062,  7070,
         1012,  5674,  1996, 22298,  2065,  2002,  2768,  2039,  2045,  1998,
         2409,  2111,  2025,  2000,  2202,  1996, 17404,  2002,  2435,  1052,
         8873,  6290,  1016,  4551,  2005,  1029,  2045,  1005,  1055,  1037,
         4365,  2986,  2240,  1012,  1012,  2002,  2488,  2025,  6616,  2023,
         2039,  2000,  3828,  5236,  2111,  1012,   102,     0,     0,     0,
            0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
            0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
            0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
            0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
            0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
            0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
            0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
            0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
            0,     0,     0,     0,     0]), 'attention_mask': tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0]), 'offset_mapping': tensor([[  0,   0],
        [  0,   5],
        [  6,   9],
        [ 10,  14],
        [ 15,  19],
        [ 20,  22],
        [ 23,  26],
        [ 27,  34],
        [ 35,  39],
        [ 40,  42],
        [ 43,  48],
        [ 49,  52],
        [ 53,  55],
        [ 56,  60],
        [ 61,  64],
        [ 65,  67],
        [ 67,  68],
        [ 69,  72],
        [ 73,  76],
        [ 76,  77],
        [ 77,  78],
        [ 79,  83],
        [ 84,  89],
        [ 90,  97],
        [ 98, 100],
        [101, 105],
        [106, 109],
        [109, 112],
        [112, 116],
        [117, 119],
        [120, 123],
        [124, 135],
        [136, 140],
        [141, 143],
        [144, 147],
        [148, 152],
        [153, 155],
        [156, 163],
        [164, 167],
        [167, 168],
        [168, 170],
        [171, 177],
        [178, 181],
        [181, 182],
        [182, 184],
        [185, 189],
        [190, 194],
        [195, 198],
        [198, 199],
        [200, 204],
        [205, 208],
        [208, 209],
        [209, 211],
        [212, 217],
        [218, 220],
        [221, 225],
        [226, 235],
        [236, 239],
        [240, 244],
        [245, 253],
        [253, 254],
        [255, 262],
        [263, 266],
        [267, 274],
        [275, 277],
        [278, 280],
        [281, 286],
        [287, 289],
        [290, 295],
        [296, 299],
        [300, 304],
        [305, 311],
        [312, 315],
        [316, 318],
        [319, 323],
        [324, 327],
        [328, 335],
        [336, 338],
        [339, 343],
        [344, 345],
        [345, 347],
        [347, 350],
        [351, 352],
        [353, 360],
        [361, 364],
        [364, 365],
        [366, 371],
        [371, 372],
        [372, 373],
        [374, 375],
        [376, 380],
        [381, 385],
        [386, 390],
        [390, 391],
        [391, 392],
        [392, 394],
        [395, 401],
        [402, 405],
        [406, 410],
        [411, 415],
        [416, 418],
        [419, 421],
        [422, 426],
        [427, 433],
        [434, 440],
        [440, 441],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0],
        [  0,   0]]), 'labels': tensor([-100, -100, -100,    1, -100, -100, -100, -100, -100, -100, -100,    1,
        -100, -100, -100, -100, -100, -100,    1,    1, -100, -100, -100, -100,
        -100, -100, -100, -100, -100, -100,    1, -100, -100, -100, -100, -100,
        -100, -100,    1,    1, -100, -100,    1,    1, -100, -100,    1, -100,
        -100, -100,    1,    1, -100, -100, -100, -100, -100, -100, -100, -100,
        -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100,
        -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100,
        -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100,
        -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100,
        -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100,
        -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100,
        -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100,
        -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100,
        -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100,
        -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100,
        -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100,
        -100, -100, -100])}